# Server configuration
server:
  port: ${SERVER_PORT}
  compression:
    enabled: true
  tomcat:
    #    max-threads: 200
    max-connections: 10000

# Spring configuration
spring:
  # Application name
  application:
    name: FlowX

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
      enabled: true

  # Database configuration
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000

  # JPA/Hibernate configuration
  jpa:
    hibernate:
      ddl-auto: ${DDL_AUTO:update}  # none, validate, update, create, create-drop
    show-sql: ${SHOW_SQL:false}
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
    open-in-view: false

  # Security
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - profile
              - email
            authorization-grant-type: authorization_code

        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  # JWT Configuration
  jwt:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION}  # 1 hour in milliseconds
    refresh-expiration: ${JWT_REFRESH_EXPIRATION}  # 7 days in milliseconds

  data:
    # Redis configuration
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      database: ${REDIS_DATABASE}

    cache:
      redis:
        time-to-live: ${REDIS_CACHE_TTL:3600}  # 1 hour in seconds
        key-prefix: ${REDIS_CACHE_KEY_PREFIX:flowx:}

  cache:
    type: ${CACHE_TYPE:redis}  # Options: redis, caffeine



  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

# Application-specific configuration
app:
  admin:
    email: ${ADMIN_EMAIL}
    password: ${ADMIN_PASSWORD}
  secure-cookies: ${SECURE_COOKIES:false}

# MinIO configuration
minio:
  endpoint: ${MINIO_ENDPOINT}
  access-key: ${MINIO_ACCESS_KEY}
  secret-key: ${MINIO_SECRET_KEY}
  bucket-name: ${MINIO_BUCKET_NAME:flowx-bucket}
  useSSL: ${MINIO_USE_SSL:false}
  presigned:
    expiry: ${MINIO_PRESIGNED_EXPIRY:36000}
